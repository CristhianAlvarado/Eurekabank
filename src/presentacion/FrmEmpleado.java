/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import datos.Conexion;
import entidades.*;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import logica.*;
import static presentacion.FrmCuenta.txtcodigocuen;

/**
 *
 * @author Lenovo
 */
public class FrmEmpleado extends javax.swing.JFrame {

    /**
     * Creates new form FrmEmpleado
     */
    public FrmEmpleado() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtcodigoE = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtpaterno = new javax.swing.JTextField();
        txtmaterno = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtciudad = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblcuentas = new javax.swing.JTable();
        lblreporte = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtcodigoCuenta = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtmontoactual = new javax.swing.JTextField();
        txtmoneda1 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtcantmovmes = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtmontodeposito = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtmontofinal = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtimpuesto = new javax.swing.JTextField();
        txtcodigoReferencia = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        btnRealizarMovimiento = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        txtcuendestino = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtmonedadeposito = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtimportedeposito = new javax.swing.JTextField();
        txtsaldodeposito = new javax.swing.JTextField();
        btnRealizarDeposito = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        txtcuenorigen = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtsaldoorigen = new javax.swing.JTextField();
        txtmonedaorigen = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        txtimporteorigen = new javax.swing.JTextField();
        btnRealizarRetiro = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        txtclave = new javax.swing.JPasswordField();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtcodigoclie = new javax.swing.JTextField();
        txtpaternoclie = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtmaternoclie = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtnombreclie = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtdniclie = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtciudadclie = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtdireccionclie = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txttelefonoclie = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtemailclie = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtcuencodigo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cbomoneda = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        txtcodigoCliente = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtmontoinicial = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblcuentas1 = new javax.swing.JTable();
        btnCrearCuenta = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(101, 35, 55));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Goudy Stout", 0, 24)); // NOI18N
        jLabel2.setText("EUREKABANK");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 340, 50));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_bank_building_60px.png"))); // NOI18N
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 90, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(53, 51, 49));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Código del empleado");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        txtcodigoE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtcodigoE.setEnabled(false);
        jPanel2.add(txtcodigoE, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 150, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Ap. Paterno");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Ap. Materno");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Ciudad");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Nombre");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Dirección");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Datos del Empleado");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        txtpaterno.setEnabled(false);
        jPanel2.add(txtpaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 158, -1));

        txtmaterno.setEnabled(false);
        jPanel2.add(txtmaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 158, -1));

        txtnombre.setEnabled(false);
        jPanel2.add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 200, -1));

        txtciudad.setEnabled(false);
        jPanel2.add(txtciudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 200, -1));

        txtdireccion.setEnabled(false);
        jPanel2.add(txtdireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 200, -1));

        tblcuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Cuenta", "CodigoMoneda", "Codigo Sucursal", "Codigo Cliente", "Saldo", "Fecha Creación", "Estado Cuenta", "Cont. Movimiento"
            }
        ));
        jScrollPane1.setViewportView(tblcuentas);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 750, 110));

        lblreporte.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblreporte.setText("Reporte de Cuentas Creadas Por el Empleado ");
        jPanel2.add(lblreporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, -1, -1));
        jPanel2.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, -1, -1));

        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_customer_support_64px.png"))); // NOI18N
        jPanel2.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, -1, -1));

        jTabbedPane1.addTab("Datos de Empleado", jPanel2);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel30.setText("Realizar Transferencia");
        jPanel6.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Código de la cuenta");
        jPanel6.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        txtcodigoCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcodigoCuentaKeyReleased(evt);
            }
        });
        jPanel6.add(txtcodigoCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 150, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Monto de la cuenta");
        jPanel6.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, -1, -1));

        txtmontoactual.setEnabled(false);
        jPanel6.add(txtmontoactual, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 70, -1));

        txtmoneda1.setEnabled(false);
        jPanel6.add(txtmoneda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 100, 80, -1));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Cant. de movs. del mes actual");
        jPanel6.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, -1, -1));
        jPanel6.add(txtcantmovmes, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 140, 80, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("Monto a depositar");
        jPanel6.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        txtmontodeposito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmontodepositoKeyReleased(evt);
            }
        });
        jPanel6.add(txtmontodeposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 150, -1));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("Monto final a depositar");
        jPanel6.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        txtmontofinal.setEnabled(false);
        jPanel6.add(txtmontofinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 150, -1));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("Impuesto");
        jPanel6.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, -1, -1));

        txtimpuesto.setEnabled(false);
        jPanel6.add(txtimpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 150, -1));
        jPanel6.add(txtcodigoReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 150, -1));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("Código de la cuenta a depositar");
        jPanel6.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        btnRealizarMovimiento.setBackground(new java.awt.Color(101, 35, 55));
        btnRealizarMovimiento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRealizarMovimiento.setText("Realizar Movimiento");
        btnRealizarMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarMovimientoActionPerformed(evt);
            }
        });
        jPanel6.add(btnRealizarMovimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 170, 30));

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_mastercard_logo_32px.png"))); // NOI18N
        jPanel6.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, -1, -1));

        jLabel57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/visa (1).png"))); // NOI18N
        jPanel6.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, -1, -1));

        jTabbedPane1.addTab("Transferencia", jPanel6);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel37.setText("Realizar Depósito");
        jPanel9.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));

        txtcuendestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcuendestinoKeyReleased(evt);
            }
        });
        jPanel9.add(txtcuendestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 160, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("Cuenta Destino");
        jPanel9.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel38.setText("Saldo de la cuenta");
        jPanel9.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        txtmonedadeposito.setEnabled(false);
        jPanel9.add(txtmonedadeposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 70, -1));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel39.setText("Importe");
        jPanel9.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));
        jPanel9.add(txtimportedeposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 160, -1));

        txtsaldodeposito.setEnabled(false);
        jPanel9.add(txtsaldodeposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 80, -1));

        btnRealizarDeposito.setBackground(new java.awt.Color(101, 35, 55));
        btnRealizarDeposito.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRealizarDeposito.setText("Realizar Depósito");
        btnRealizarDeposito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarDepositoActionPerformed(evt);
            }
        });
        jPanel9.add(btnRealizarDeposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 160, 30));

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_mastercard_logo_32px.png"))); // NOI18N
        jPanel9.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, -1));

        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/visa (1).png"))); // NOI18N
        jPanel9.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, -1, -1));

        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cajero-automatico (1).png"))); // NOI18N
        jPanel9.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, -1, -1));

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cajero-automatico (3).png"))); // NOI18N
        jPanel9.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 330, -1, -1));

        jTabbedPane1.addTab("Depósito", jPanel9);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel40.setText("Realizar Retiro");
        jPanel10.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel41.setText("Cuenta Origen");
        jPanel10.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        txtcuenorigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcuenorigenKeyReleased(evt);
            }
        });
        jPanel10.add(txtcuenorigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 160, -1));

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel42.setText("Saldo de la cuenta");
        jPanel10.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        txtsaldoorigen.setEnabled(false);
        jPanel10.add(txtsaldoorigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 80, -1));

        txtmonedaorigen.setEnabled(false);
        jPanel10.add(txtmonedaorigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 70, -1));

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel43.setText("Importe");
        jPanel10.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));
        jPanel10.add(txtimporteorigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 160, -1));

        btnRealizarRetiro.setBackground(new java.awt.Color(101, 35, 55));
        btnRealizarRetiro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRealizarRetiro.setText("Realizar Retiro");
        btnRealizarRetiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarRetiroActionPerformed(evt);
            }
        });
        jPanel10.add(btnRealizarRetiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 160, 30));

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel44.setText("Contraseña");
        jPanel10.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, -1));
        jPanel10.add(txtclave, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 160, -1));

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_mastercard_logo_32px.png"))); // NOI18N
        jPanel10.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, -1, -1));

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/visa (1).png"))); // NOI18N
        jPanel10.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, -1, -1));

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cajero-automatico (1).png"))); // NOI18N
        jPanel10.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, -1));

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cajero-automatico (2).png"))); // NOI18N
        jPanel10.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 330, -1, -1));

        jTabbedPane1.addTab("Retiro", jPanel10);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Código:");
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));
        jPanel8.add(txtcodigoclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 150, -1));
        jPanel8.add(txtpaternoclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 142, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Apellido Paterno:");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));
        jPanel8.add(txtmaternoclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 142, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Apellido Materno:");
        jPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, -1));
        jPanel8.add(txtnombreclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 142, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Nombre:");
        jPanel8.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));
        jPanel8.add(txtdniclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 142, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("DNI:");
        jPanel8.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));
        jPanel8.add(txtciudadclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 170, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Ciudad:");
        jPanel8.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));
        jPanel8.add(txtdireccionclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 162, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Dirección:");
        jPanel8.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, -1, -1));
        jPanel8.add(txttelefonoclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 180, 162, -1));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Teléfono:");
        jPanel8.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, -1, -1));
        jPanel8.add(txtemailclie, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 162, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("E-mail:");
        jPanel8.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, -1, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel26.setText("Registrar Cliente");
        jPanel8.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        btnRegistrar.setBackground(new java.awt.Color(101, 35, 55));
        btnRegistrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel8.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, 110, 30));

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_client_management_64px.png"))); // NOI18N
        jPanel8.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, -1, -1));

        jTabbedPane1.addTab("Crear Cliente", jPanel8);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Moneda");
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));

        txtcuencodigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel7.add(txtcuencodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 150, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Código de la cuenta");
        jPanel7.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        cbomoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soles", "Dolares", " " }));
        jPanel7.add(cbomoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 90, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Código del cliente");
        jPanel7.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        txtcodigoCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel7.add(txtcodigoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 150, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Monto Inicial");
        jPanel7.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        txtmontoinicial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel7.add(txtmontoinicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 150, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel27.setText("Crear Cuenta");
        jPanel7.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        tblcuentas1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Cuenta", "CodigoMoneda", "Codigo Sucursal", "Codigo Cliente", "Saldo", "Fecha Creación", "Estado Cuenta", "Cont. Movimiento"
            }
        ));
        jScrollPane2.setViewportView(tblcuentas1);

        jPanel7.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 750, 110));

        btnCrearCuenta.setBackground(new java.awt.Color(101, 35, 55));
        btnCrearCuenta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCrearCuenta.setText("Crear");
        btnCrearCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCuentaActionPerformed(evt);
            }
        });
        jPanel7.add(btnCrearCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 80, 30));

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/coin_money_icon-icons.com_51091.png"))); // NOI18N
        jPanel7.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, -1, -1));

        jTabbedPane1.addTab("Crear Cuenta", jPanel7);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 820, 440));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 840, 450));

        jPanel5.setBackground(new java.awt.Color(101, 35, 55));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Goudy Stout", 0, 24)); // NOI18N
        jLabel3.setText("EUREKABANK");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 340, 50));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_bank_building_60px.png"))); // NOI18N
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 90, -1));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 200));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_go_back_24px.png"))); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 110, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 950, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void llenartabla(String emplcodigo){
        modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(columnas);
        try {
            cn = Conexion.realizarConexion();
            String sql = "{call sp_obtenerCuentas_empleado(?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, emplcodigo);
            rs = cs.executeQuery();
            while(rs.next()) {
                fila[0] = rs.getString(1);
                fila[1] = rs.getString(2) ;
                fila[2] = rs.getString(3);
                fila[3] = rs.getString(4);
                fila[4] = rs.getString(5);
                fila[5] = rs.getString(6);
                fila[6] = rs.getString(7);
                fila[7] = rs.getString(8);
                modelo.addRow(fila);
            }
            tblcuentas.setModel(modelo);
            tblcuentas1.setModel(modelo);
        } catch (ClassNotFoundException | SQLException ex) {
            showMessageDialog(null,ex.getMessage(),"Error",0);
        } finally {
            try {
                rs.close();
                cs.close();
                cn.close();
            }catch(SQLException ex) {
                showMessageDialog(null,ex.getMessage(),"Error",0);
            }
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        fl.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        emplcodigo = txtcodigoE.getText();
        lista = EmpleadoBL.obtenerEmpleado(emplcodigo);
        if (lista != null) {
            iterador = lista.iterator();
            empleado = iterador.next();
            txtcodigoE.setText(empleado.getCodigoE());
            txtpaterno.setText(empleado.getPaterno());
            txtmaterno.setText(empleado.getMaterno());
            txtnombre.setText(empleado.getNombre());
            txtdireccion.setText(empleado.getDireccion());
            txtciudad.setText(empleado.getCiudad());
            lblreporte.setText("Reporte de Cuentas Creadas Por el Empleado "+empleado.getNombre());
            llenartabla(emplcodigo);
            
        } else {
            JOptionPane.showMessageDialog(this, "El código no existe", "Resultado", 1);
            txtpaterno.requestFocus();
        }
    }//GEN-LAST:event_formWindowActivated

    public void limpiar(){
        txtcodigoclie.setText(null);
        txtpaternoclie.setText(null);
        txtmaternoclie.setText(null);
        txtnombreclie.setText(null);
        txtdniclie.setText(null);
        txtciudadclie.setText(null);
        txtdireccionclie.setText(null);
        txttelefonoclie.setText(null);
        txtemailclie.setText(null);
    }
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        int respuesta;
        cliecodigo = txtcodigoclie.getText();
        cliepaterno = txtpaternoclie.getText();
        cliematerno = txtmaternoclie.getText();
        clienombre = txtnombreclie.getText();
        cliedni = txtdniclie.getText();
        clieciudad = txtciudadclie.getText();
        cliedireccion = txtdireccionclie.getText();
        clietelefono = txttelefonoclie.getText();
        clieemail = txtemailclie.getText();
        respuesta = ClienteBL.insertarCliente(cliecodigo, cliepaterno, cliematerno, clienombre, cliedni, clieciudad, cliedireccion, clietelefono, clieemail);
        this.limpiar();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    public String getMoneda(String moneda){
        String codigo="";
        if (moneda.equalsIgnoreCase("Soles")) {
            codigo = "01";
        }else{
            codigo = "02";
        }
        return codigo;
    }
     public String obtenerSucursal(String ciudad) {
        try {
            cn = Conexion.realizarConexion();
            String sql = "{call sp_obtener_sucucodigo(?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, ciudad);
            rs = cs.executeQuery();
            while (rs.next()) {
                return rs.getString("sucucodigo");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            showMessageDialog(null, ex.getMessage(), "Error", 0);
        } finally {
            try {
                rs.close();
                cs.close();
                cn.close();
            } catch (SQLException ex) {
                showMessageDialog(null, ex.getMessage(), "Error", 0);
            }
        }
        return null;
    }
    
    
    
    private void btnCrearCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCuentaActionPerformed
        // TODO add your handling code here:
        try {
            int rpta, rpta1;
            cuencodigo = txtcuencodigo.getText();
            cliecodigo = txtcodigoCliente.getText();
            listaCliente = ClienteBL.obtenerCliente(cliecodigo);
            
            cuensaldo = Float.parseFloat(txtmontoinicial.getText());
            monecodigo = getMoneda(cbomoneda.getSelectedItem().toString());
            emplcodigo = txtcodigoE.getText();
            cuenestado ="ACTIVO";
            cuencontmov = 1;
            cuenclave = "123456";
            sucucodigo = obtenerSucursal(txtciudad.getText());
            tipocodigo = "001";
            int diaHoy, mesHoy, añoHoy, año1;
            GregorianCalendar fechaActual = new GregorianCalendar();
            diaHoy = fechaActual.get(Calendar.DAY_OF_MONTH);
            mesHoy = fechaActual.get(Calendar.MONTH)+1;
            añoHoy = fechaActual.get(Calendar.YEAR);
            año1 = añoHoy - 1900;
            fechaCreacion = new Date(año1, mesHoy -1,diaHoy);
            if (listaCliente == null) {
                JOptionPane.showMessageDialog(null, "El código de cliente ingresado no existe: ");
            } else{
                iteradorCliente = listaCliente.iterator();
                cliente = iteradorCliente.next();
                rpta = CuentaBL.insertarCuenta(cuencodigo, monecodigo, sucucodigo, emplcodigo, cliecodigo, cuensaldo, fechaCreacion, cuenestado, cuencontmov, cuenclave);
                rpta1 = MovimientoBL.insertarMovimiento(cuencodigo, cuencontmov, fechaCreacion, emplcodigo, tipocodigo, cuensaldo, null);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Datos no válidos + excepcion: "+ e.toString());
        }
        
    }//GEN-LAST:event_btnCrearCuentaActionPerformed

    private void txtmontodepositoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmontodepositoKeyReleased
        // TODO add your handling code here:
        String impuesto = txtmontodeposito.getText();
        if (impuesto.equals("")==false && impuesto.matches("[0-9]*")) {
            int num = Integer.parseInt(impuesto);
            if (Integer.parseInt(txtcantmovmes.getText())>15 && txtmoneda1.getText().equalsIgnoreCase("Soles")) {
                num+=2;
                double imp = num*0.0008;
                txtimpuesto.setText(imp+"");
                txtmontofinal.setText((num+imp)+"");
            }else if (Integer.parseInt(txtcantmovmes.getText())>15 && txtmoneda1.getText().equalsIgnoreCase("Dolares")) {
                num+=0.6;
                double imp = num*0.0008;
                txtimpuesto.setText(imp+"");
                txtmontofinal.setText((num+imp)+"");
            } else{                
                double imp = num*0.0008;
                txtimpuesto.setText(imp+"");
                txtmontofinal.setText((num+imp)+"");
            }
            
        }
    }//GEN-LAST:event_txtmontodepositoKeyReleased

    private String getMonedaCodigo(String codigo){
        String moneda="";
        if (codigo.equalsIgnoreCase("01")) {
            moneda = "Soles";
        } else{
            moneda = "Dolares";
        }
        return moneda;
    }
    
    public String getNumMovimiento(String codigoC){
        String num="0";
        try {            
            cn=Conexion.realizarConexion();
            String sql="{call sp_obtener_nummovimiento(?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, codigoC);
            rs = cs.executeQuery();
            while(rs.next()) {
                num = rs.getString(1);
                if (num == null) {
                    num = "0";
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            showMessageDialog(null,ex.getMessage(),"Error",0);
        } finally {
            try {
                rs.close();
                cs.close();
                cn.close();
            }catch(SQLException ex) {
                showMessageDialog(null,ex.getMessage(),"Error",0);
            }
        }
        return num;
    }
    
    public String getNumMovimientoMes(String cuencodigo, Date fecha1, Date fecha2){
        String num="0";
        try {            
            cn=Conexion.realizarConexion();
            String sql="{call sp_obtener_cantmovpormes(?,?,?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, cuencodigo);
            cs.setDate(2, fecha1);
            cs.setDate(3, fecha2);
            rs = cs.executeQuery();
            while(rs.next()) {
                num = rs.getString(1);
                if (num == null) {
                    num = "0";
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            showMessageDialog(null,ex.getMessage(),"Error",0);
        } finally {
            try {
                rs.close();
                cs.close();
                cn.close();
            }catch(SQLException ex) {
                showMessageDialog(null,ex.getMessage(),"Error",0);
            }
        }
        return num;
    }
    
    private void txtcodigoCuentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoCuentaKeyReleased
        // TODO add your handling code here:
        cuencodigo = txtcodigoCuenta.getText();
        listaCuen = CuentaBL.obtenerCuenta(cuencodigo);
        int mesHoy, añoHoy, año1;
        GregorianCalendar fechaActual = new GregorianCalendar();
        mesHoy = fechaActual.get(Calendar.MONTH)+1;
        añoHoy = fechaActual.get(Calendar.YEAR);
        año1 = añoHoy - 1900;
        fecha1=new Date(año1,mesHoy-1,1);
        fecha2=new Date(año1,mesHoy-1,31);        
        if (listaCuen != null) {
            iteradorCuen = listaCuen.iterator();
            cuenta = iteradorCuen.next();
            String moneda = getMonedaCodigo(cuenta.getMonecodigo());
            txtmontoactual.setText(String.valueOf(cuenta.getCuensaldo()));
            txtmoneda1.setText(moneda);
            txtcantmovmes.setText(getNumMovimientoMes(txtcodigoCuenta.getText(), fecha1, fecha2));
        } else{
            txtmontoactual.setText(null);
            txtmoneda1.setText(null);
            txtcantmovmes.setText(null);
        }
    }//GEN-LAST:event_txtcodigoCuentaKeyReleased

    public String Transferencia(String codigoDa, String codigoRecibe, float montoda, float montorecibe){
        String mensaje = "Registro actualizado";
        try {
            cn = Conexion.realizarConexion();
            String sql = "{call sp_deposito(?,?,?,?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, codigoDa);
            cs.setString(2, codigoRecibe);
            cs.setFloat(3, montoda);
            cs.setFloat(4, montorecibe);
            cs.executeUpdate();
        } catch (ClassNotFoundException | SQLException ex) {
            mensaje = ex.getMessage();
        } finally {
            try {
                cs.close();
                cn.close();
            } catch (SQLException ex) {
                mensaje = ex.getMessage();
            }
        }
        return mensaje;
    }
    
    public float getMontoRecibido(String codigocuen){
        try {
            cn = Conexion.realizarConexion();
            String sql = "{call sp_obtener_montorecibe(?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, codigocuen);
            rs = cs.executeQuery();
            while (rs.next()) {
                return rs.getFloat("cuensaldo");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            showMessageDialog(null, ex.getMessage(), "Error", 0);
        } finally {
            try {
                rs.close();
                cs.close();
                cn.close();
            } catch (SQLException ex) {
                showMessageDialog(null, ex.getMessage(), "Error", 0);
            }
        }
        return 0.0f;
    }
    
    private void btnRealizarMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarMovimientoActionPerformed
        // TODO add your handling code here:
        try {
            int rpta, rpta2;
            String rpta1;
            float montofinal;
            cuencodigo = txtcodigoCuenta.getText();
            cuenreferencia = txtcodigoReferencia.getText();
            listaCuen1 = CuentaBL.obtenerCuenta(cuenreferencia);            
            movinum = Integer.parseInt(getNumMovimiento(cuencodigo));
            movinum2 = Integer.parseInt(getNumMovimiento(cuenreferencia));
            movinum++;
            movinum2++;
            int diaHoy, mesHoy, añoHoy, año1;
            GregorianCalendar fechaActual = new GregorianCalendar();
            diaHoy = fechaActual.get(Calendar.DAY_OF_MONTH);
            mesHoy = fechaActual.get(Calendar.MONTH)+1;
            añoHoy = fechaActual.get(Calendar.YEAR);
            año1 = añoHoy - 1900;
            movifecha = new Date(año1, mesHoy -1,diaHoy);
            emplcodigo = txtcodigoE.getText();
            tipocodigo = "009";
            tipocodigo2 = "008";
            moviimporte = Float.parseFloat(txtmontofinal.getText());
            montofinal = Float.parseFloat(txtmontodeposito.getText());
            if (txtcodigoReferencia.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la cuenta destino", "Error",0);
                txtcodigoReferencia.requestFocus();
            } else if(listaCuen1 == null){
                JOptionPane.showMessageDialog(null, "Código de cuenta destino no existe", "Error",0);
                txtcodigoReferencia.requestFocus();
            } else{
                iteradorCuen1 = listaCuen1.iterator();
                cuenta1 = iteradorCuen1.next();
                String codigomoneda2 = getMonedaCodigo(cuenta1.getMonecodigo());
                if (moviimporte>Float.parseFloat(txtmontoactual.getText()) ) {                    
                    JOptionPane.showMessageDialog(null, "No se puede realizar el movimiento porque usted quiere depositar un monto mayor al que posee", "Error",0);
                    txtmontofinal.setText(null);
                    txtmontodeposito.setText(null);
                    txtimpuesto.setText(null);                    
                } else if(!codigomoneda2.equalsIgnoreCase(txtmoneda1.getText())){
                    JOptionPane.showMessageDialog(null, "No se puede realizar una tranferencia entre cuentas con diferentes tipo de monedas", "Error",0);
                    txtcodigoReferencia.requestFocus();
                } else{
                    rpta = MovimientoBL.insertarMovimiento(cuencodigo, movinum, movifecha, emplcodigo, tipocodigo, moviimporte, cuenreferencia);
                    rpta2 = MovimientoBL.insertarMovimiento(cuenreferencia, movinum2, movifecha, emplcodigo, tipocodigo2, montofinal, null);
                    float montoRecibe = montofinal + cuenta1.getCuensaldo();
                    float montoactual = Float.parseFloat(txtmontoactual.getText())-moviimporte;
                    rpta1=Transferencia(cuencodigo, cuenreferencia, montoactual, montoRecibe);
                }
            }         
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Datos no válidos + excepcion: "+ e.toString());
        }

    }//GEN-LAST:event_btnRealizarMovimientoActionPerformed

    private void txtcuendestinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcuendestinoKeyReleased
        // TODO add your handling code here:
        cuencodigo = txtcuendestino.getText();
        listaCuen = CuentaBL.obtenerCuenta(cuencodigo);       
        if (listaCuen != null) {
            iteradorCuen = listaCuen.iterator();
            cuenta = iteradorCuen.next();
            String moneda = getMonedaCodigo(cuenta.getMonecodigo());
            txtsaldodeposito.setText(String.valueOf(cuenta.getCuensaldo()));
            txtmonedadeposito.setText(moneda);
        } else{
            txtsaldodeposito.setText(null);
            txtmonedadeposito.setText(null);
        }
    }//GEN-LAST:event_txtcuendestinoKeyReleased

    public String Deposito(String cuencodigo, float monto){
        String mensaje = "Depósito Realizado";
        try {
            cn = Conexion.realizarConexion();
            String sql = "{call sp_deposito1(?,?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, cuencodigo);
            cs.setFloat(2, monto);
            cs.executeUpdate();
        } catch (ClassNotFoundException | SQLException ex) {
            mensaje = ex.getMessage();
        } finally {
            try {
                cs.close();
                cn.close();
            } catch (SQLException ex) {
                mensaje = ex.getMessage();
            }
        }
        return mensaje;
    }
    
    private void btnRealizarDepositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarDepositoActionPerformed
        // TODO add your handling code here:
        try {
            int rpta;
            String rpta1;
            cuencodigo = txtcuendestino.getText();
            movinum = Integer.parseInt(getNumMovimiento(cuencodigo));
            movinum++;
            int diaHoy, mesHoy, añoHoy, año1;
            GregorianCalendar fechaActual = new GregorianCalendar();
            diaHoy = fechaActual.get(Calendar.DAY_OF_MONTH);
            mesHoy = fechaActual.get(Calendar.MONTH)+1;
            añoHoy = fechaActual.get(Calendar.YEAR);
            año1 = añoHoy - 1900;
            movifecha = new Date(año1, mesHoy -1,diaHoy);
            emplcodigo = txtcodigoE.getText();
            tipocodigo = "003";
            moviimporte = Float.parseFloat(txtimportedeposito.getText());

            if (txtcuendestino.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la cuenta destino", "Error",0);
                txtcuendestino.requestFocus();
            } else if(txtimportedeposito.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Debe ingresar el importe", "Error",0);
                txtimportedeposito.requestFocus();
            } else{
                if (moviimporte<0) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar un monto mayor a 0", "Error",0);
                } else{
                    rpta = MovimientoBL.insertarMovimiento(cuencodigo, movinum, movifecha, emplcodigo, tipocodigo, moviimporte, null);
                    rpta1 = Deposito(cuencodigo, moviimporte);
                    JOptionPane.showMessageDialog(null, rpta1, "Mensaje",1);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.toString() , "Error",0);
        }
        
    }//GEN-LAST:event_btnRealizarDepositoActionPerformed

    private void txtcuenorigenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcuenorigenKeyReleased
        // TODO add your handling code here:
        cuencodigo = txtcuenorigen.getText();
        listaCuen = CuentaBL.obtenerCuenta(cuencodigo);       
        if (listaCuen != null) {
            iteradorCuen = listaCuen.iterator();
            cuenta = iteradorCuen.next();
            String moneda = getMonedaCodigo(cuenta.getMonecodigo());
            txtsaldoorigen.setText(String.valueOf(cuenta.getCuensaldo()));
            txtmonedaorigen.setText(moneda);
        } else{
            txtsaldoorigen.setText(null);
            txtmonedaorigen.setText(null);
        }
    }//GEN-LAST:event_txtcuenorigenKeyReleased

    public String Retiro(String cuencodigo, float monto){
        String mensaje = "Retiro Realizado";
        try {
            cn = Conexion.realizarConexion();
            String sql = "{call sp_retiro(?,?)}";
            cs = cn.prepareCall(sql);
            cs.setString(1, cuencodigo);
            cs.setFloat(2, monto);
            cs.executeUpdate();
        } catch (ClassNotFoundException | SQLException ex) {
            mensaje = ex.getMessage();
        } finally {
            try {
                cs.close();
                cn.close();
            } catch (SQLException ex) {
                mensaje = ex.getMessage();
            }
        }
        return mensaje;
    }
    
    private void btnRealizarRetiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarRetiroActionPerformed
        // TODO add your handling code here:
        try {
            int rpta;
            String rpta1;
            String pass= new String(txtclave.getPassword());
            cuencodigo = txtcuenorigen.getText();
            listaCuen = CuentaBL.obtenerCuenta(cuencodigo);  
            iteradorCuen = listaCuen.iterator();
            cuenta = iteradorCuen.next();
            movinum = Integer.parseInt(getNumMovimiento(cuencodigo));
            movinum++;
            int diaHoy, mesHoy, añoHoy, año1;
            GregorianCalendar fechaActual = new GregorianCalendar();
            diaHoy = fechaActual.get(Calendar.DAY_OF_MONTH);
            mesHoy = fechaActual.get(Calendar.MONTH)+1;
            añoHoy = fechaActual.get(Calendar.YEAR);
            año1 = añoHoy - 1900;
            movifecha = new Date(año1, mesHoy -1,diaHoy);
            emplcodigo = txtcodigoE.getText();
            tipocodigo = "004";
            moviimporte = Float.parseFloat(txtimporteorigen.getText());        
            if (txtcuenorigen.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la cuenta destino", "Error",0);
                txtcuenorigen.requestFocus();
            } else if(txtimporteorigen.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Debe ingresar el importe", "Error",0);
                txtimporteorigen.requestFocus();
            } else if (!pass.equalsIgnoreCase(cuenta.getCuenclave())) {
                JOptionPane.showMessageDialog(null, "Contraseña incorrecta", "Error",0);
                txtclave.requestFocus();
            } else{
                if (moviimporte>cuenta.getCuensaldo()) {
                    JOptionPane.showMessageDialog(null, "Debe retirar un monto menor al saldo que tiene", "Error",0);
                    txtimporteorigen.requestFocus();
                } else if(moviimporte<0){
                    JOptionPane.showMessageDialog(null, "Debe ingresar un monto mayor a cero", "Error",0);
                } else{
                    rpta = MovimientoBL.insertarMovimiento(cuencodigo, movinum, movifecha, emplcodigo, tipocodigo, moviimporte, null);
                    rpta1 = Retiro(cuencodigo, moviimporte);
                    JOptionPane.showMessageDialog(null, rpta1, "Mensaje",1);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.toString() , "Error",0);
        }
        
    }//GEN-LAST:event_btnRealizarRetiroActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearCuenta;
    private javax.swing.JButton btnRealizarDeposito;
    private javax.swing.JButton btnRealizarMovimiento;
    private javax.swing.JButton btnRealizarRetiro;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cbomoneda;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblreporte;
    private javax.swing.JTable tblcuentas;
    private javax.swing.JTable tblcuentas1;
    private javax.swing.JTextField txtcantmovmes;
    private javax.swing.JTextField txtciudad;
    private javax.swing.JTextField txtciudadclie;
    private javax.swing.JPasswordField txtclave;
    private javax.swing.JTextField txtcodigoCliente;
    private javax.swing.JTextField txtcodigoCuenta;
    public static javax.swing.JTextField txtcodigoE;
    private javax.swing.JTextField txtcodigoReferencia;
    private javax.swing.JTextField txtcodigoclie;
    private javax.swing.JTextField txtcuencodigo;
    private javax.swing.JTextField txtcuendestino;
    private javax.swing.JTextField txtcuenorigen;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtdireccionclie;
    private javax.swing.JTextField txtdniclie;
    private javax.swing.JTextField txtemailclie;
    private javax.swing.JTextField txtimportedeposito;
    private javax.swing.JTextField txtimporteorigen;
    private javax.swing.JTextField txtimpuesto;
    private javax.swing.JTextField txtmaterno;
    private javax.swing.JTextField txtmaternoclie;
    private javax.swing.JTextField txtmoneda1;
    private javax.swing.JTextField txtmonedadeposito;
    private javax.swing.JTextField txtmonedaorigen;
    private javax.swing.JTextField txtmontoactual;
    private javax.swing.JTextField txtmontodeposito;
    private javax.swing.JTextField txtmontofinal;
    private javax.swing.JTextField txtmontoinicial;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtnombreclie;
    private javax.swing.JTextField txtpaterno;
    private javax.swing.JTextField txtpaternoclie;
    private javax.swing.JTextField txtsaldodeposito;
    private javax.swing.JTextField txtsaldoorigen;
    private javax.swing.JTextField txttelefonoclie;
    // End of variables declaration//GEN-END:variables

    FrmLogin fl = new FrmLogin();
    Date fecha1, fecha2;
    int dia, mes , año;
    private String emplcodigo, emplpaterno, emplmaterno, emplnombre, emplciudad, emplusuario, emplclave;
    private String cliecodigo, cliepaterno, cliematerno, clienombre, cliedni, clieciudad, cliedireccion, clietelefono, clieemail;
    private String cuencodigo, monecodigo, sucucodigo, cuenestado, cuenclave; 
    private float cuensaldo=0.0f;
    private String tipocodigo, tipocodigo2, cuenreferencia;
    private int movinum, movinum2;
    private float moviimporte;
    private Date fechaCreacion, movifecha;
    private int cuencontmov, movinumero;
    private ArrayList<Empleado> lista;
    private Iterator<Empleado> iterador;
    private Empleado empleado;
    private ArrayList<Cuenta> listaCuen;
    private Iterator<Cuenta> iteradorCuen;
    private Cuenta cuenta;
    private ArrayList<Cuenta> listaCuen1;
    private Iterator<Cuenta> iteradorCuen1;
    private Cuenta cuenta1;
    private ArrayList<Cliente> listaCliente;
    private Iterator<Cliente> iteradorCliente;
    private Cliente cliente;
    private DefaultTableModel modelo;
    private String columnas[] = {"CodigoCuenta", "CodigoMoneada", "CodigoSucursal", "CodigoCliente", "SaldoCuenta", "FechaCreación", "EstadoCuenta", "Cant. Movimientos"};
    private Object fila[] = new Object[columnas.length];
    private static Connection cn = null;
    private static CallableStatement cs = null;
    private static PreparedStatement ps = null;
    private static Statement st = null;
    private static ResultSet rs = null;
}
